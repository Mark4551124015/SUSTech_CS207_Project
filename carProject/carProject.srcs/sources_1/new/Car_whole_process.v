`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2022/12/14 16:47:34
// Design Name: 
// Module Name: Car_whole_process
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Car_whole_process(
    input sys_clk,              //bind to P17 pin (100MHz system clock)
    input rst,                  //reset button
    input powerButton,          //?????????      ????S2
    input modeButton,           //???��????      ????S4
    input leftButton,           //??????          ????S3
    input rightButton,          //??????          ????S0
    input clutch,               //??????          SW7
    input throttle,             //???????          SW6
    input break,                //???????          SW5
    input reverse,              //????????          SW4
    output powerState,          //??????????    LED??D1_0
    output[1:0] drivingMode,    //??????????    LED??D1_1??D1_2
    output[1:0] carState,       //???????????    LED??D1_3??D1_4
    output clutchShow,          //????????        LED??D2_7
    output throttleShow,        //?????????        LED??D2_6
    output breakShow,           //????????        LED??D2_5
    output reverseShow,         //?????????        LED??D2_4
    output[1:0] turnShow,       //????????        LED??D1_5??LED??D1_6
    output[6:0] JourneyShow,     //?��??????        seg7(???????��??)
    output[7:0] state           //????
    );
    wire[3:0] switchTotal = {clutch,throttle,break,reverse};//????????
    //???????????????????????????????????????????????1??????????0???????????
    wire[3:0] buttonTotal = {powerButton,modeButton,leftButton,rightButton};//????????
    //????????????��???????????????��???????????????????��???????????????
    //wire state = {powerState,drivingMode,carState,reverseShow,turnShow};//???????? 
    //????????????��???????????????��????????????? ????��??????????????��?????????????????????��?????????????????
    reg[7:0] state;
    parameter   

    S0 = 8'b0XXXXXXX,   //????? ???????????????????????????��??????????��
    S1 = 8'b11001XXX,   //????????? ????????��???????????? ????&???&non-starting
    S2 = 8'b11010XXX,   //????&???&starting
    S3 = 8'b11011XXX,   //????&???&moving,
    S10 = 8'b101XXXXX,   //????&?????
    S20 = 8'b111XXXXX;   //????&???

    
always @(posedge sys_clk, negedge rst) 
begin
        if(rst)
            carStateTotal <= 8'b10000000; ;
        else 
        begin
            case(FSM)
            S0:
            begin
                Out_0;          //???
                if(condition1)        FSM<= S1;//?????
                else if (condition2)  FSM<= S2;//?????
                ??
                end
            S1:begin
                Out_1;          //???
                if(condition3)       FSM<= S3;//?????
                else if (condition4) FSM <=S4; 
                ??
                end
                ????
            default: begin
                Out_0;          //???
                if(condition0) FSM<= S0;//?????
                       end
            endcase
            end
        end

    
    
endmodule
